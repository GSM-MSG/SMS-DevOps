#discodbot.yml
name: sms-discodbot-pipeline
on:
    push:
      paths:
        - "automation/discord-bot/CD/**"  
      branches: [main]

env:
  token: ${{ secrets.DISCORD_BOT_TOKEN }}
  channel: ${{ secrets.ANDROID_CHANNEL }}

permissions:
  contents: read

jobs:
  discord_bot:
    name: 'Discord_bot'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name : CodeDeploy Create Deployment
      run: |
        aws deploy create-deployment \
        --application-name sms-discord-codedeploy-application \
        --deployment-group-name sms-discordbot-deploygroup \
        --deployment-config-name CodeDeployDefault.OneAtATime \
        --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

          
    - name: SMS-Backend-CD Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ success() }}
      with:
        title: ✅ SMS-DiscordBot-CD 성공! ✅
        webhook: ${{ secrets.SMS_DISCORD_CD_WEBHOOK }}
        color: 00FF00

    - name: SMS-Backend-CD Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ failure() }}
      with:
        title: ❗️ SMS-DiscordBot-CD 실패! ❗️
        webhook: ${{ secrets.SMS_DISCORD_CD_WEBHOOK }}
        color: FF0000
